# If you want to modify any of these parameters, simply uncomment the
# relevant line and adjust the value.

# ----- initialization -----
# Determines whether the server runs in "promiscuous login" mode. If 
# server.mode=research, then brokers do not need passwords or other
# authentication credentials beyond their usernames. If
# server.mode=tournament, the brokers will not be logged in without
# credentials issued by the tournament scheduler.
server.mode = research

# Name of bootstrap data file. Used for output in bootstrap mode, input
# for sim mode.
server.bootstrapDataFile = boot-data.xml

# Filename suffix for server logfiles. The server will generate two logfiles
# as it runs, named "powertac-suffix.trace" and "powertac-suffix.state"
server.logfileSuffix = default

# Real-time length of a bootstrap timeslot in seconds. The server can run
# much faster without attached broker agents.
server.bootstrapTimeslotSeconds = 1

# Network address of the message queue broker for this server
server.jmsManagementService.jmsBrokerUrl = tcp://localhost:61616

# Weather service Configuration
# Location of weather server
server.weatherService.serverUrl = http://tac06.cs.umn.edu:8080/powertac-weather-server/weatherSet/weatherRequest?id=0&setname=default&weather_days=1&weather_id=

# Timeslot interval to make requests
server.weatherService.weatherReqInterval = 12

# If network calls to weather server should block until finished
server.weatherService.blocking = true

# Length of forecasts (in hours)
server.weatherService.forecastHorizon = 24

# ----- competition -----
# Start date/time for the beginning of the simulation scenario. Note that this
# is actually the start of the bootstrap period. Format is yyyy-mm-dd, and the
# clock always starts at midnight. Timezone is not supported. Can be set only
# bootstrap mode.
common.competition.simulationBaseTime = 2009-10-10

# Number of timeslots during bootstrap mode for which data is collected
common.competition.bootstrapTimeslotCount = 336

# Number of timeslots at the beginning of bootstrap mode for which data
# is discarded
common.competition.bootstrapDiscardedTimeslots = 24

# Minimum number of timeslots in simulation, not including the bootstrap
# period
common.competition.minimumTimeslotCount = 1400

# Expected number of timeslots for a simulation. Must be >= minimumTimeslotCount
common.competition.expectedTimeslotCount = 1440

# Length of individual timeslot, in simulation minutes. Can be set only
# in bootstrap mode
common.competition.timeslotLength = 60

# Real-time length of a simulation timeslot in seconds. Note that if the
# specified value does not evenly divide into the timeslotLength, the 
# actual value will be the next larger integer that is a factor of 60.
common.competition.simulationTimeslotSeconds = 5

# Number of timeslots simultaneously open for trading. Can be set only in
# bootstrap mode.
common.competition.timeslotsOpen = 24

# Number of timeslots closed for trading at any time, including the
# current timeslot. Can be set only in bootstrap mode.
common.competition.deactivateTimeslotsAhead = 1

# Number of timeslots in the bootstrap period. Can be set only in bootstrap
# mode.
common.competition.bootstrapTimeslotCount = 336

# ----- accounting -----
# Interest rate on bank deposits. If not set explicitly, the value will be
# chosen randomly between minInterest and maxInterest
accounting.accountingService.minInterest = 0.04
accounting.accountingService.maxInterest = 0.12
#accounting.accountingService.bankInterest = 0.06

# ----- tariff market -----
# Fee for new tariff publication. Range is [-100 -500]
tariffmarket.tariffMarketService.minPublicationFee = -100.0
tariffmarket.tariffMarketService.maxPublicationFee = -500.0
# Set the fee directly to override random selection
#tariffMarketService.publicationFee=-100.0

# Fee for revoking a tariff. Range is [-100 -500]
tariffmarket.TariffMarketService.minRevocationFee = -100.0
tariffmarket.TariffMarketService.maxRevocationFee = -500.0
# Set the fee directly to override random selection
#tariffmarket.TariffMarketService.revocationFee = -50.0

# Number of timeslots between tariff publication events. Default is 6
tariffmarket.tariffMarketService.publicationInterval = 6

# Number of timeslots from the first timeslot to delay the first
# publication event. Default is 1. It does not work well to make this
# zero, because brokers will not have an opportunity to post tariffs
# in timeslot 0.
tariffmarket.tariffMarketService.publicationOffset = 1

# ----- wholesale market ------
# Proportion of market surplus that goes to the seller. Default is 0.5.
auctioneer.auctionService.sellerSurplusRatio = 0.5

# Default margin when setting a clearing price between a limit order and
# a market order. Default is 0.2.
auctioneer.auctionService.defaultMargin = 0.2

# Default price/mwh when matching only market orders
auctioneer.auctionService.defaultClearingPrice = 40.0

# -------------- Distribution utility -------------------
# Low end of distribution fee range
distributionutility.distributionUtilityService.distributionFeeMin = -0.003

# High end of distribution fee range
distributionutility.distributionUtilityService.distributionFeeMax = -0.03

# Distribution fee: overrides random value selection
#distributionutility.distributionUtilityService.distributionFee = -0.01

# Low end of balancing cost range
distributionutility.distributionUtilityService.balancingCostMin = -0.02

# High end of balancing cost range
distributionutility.distributionUtilityService.balancingCostMax = -0.06

# Balancing cost: overrides random value selection
#distributionutility.distributionUtilityService.balancingCost = -0.04

# Spot price/mwh used if unavailable from wholesale market
distributionutility.distributionUtilityService.defaultSpotPrice = -50.0

# --------------- Default broker -------------------
# Fixed price/kwh for default consumption tariff
du.defaultBrokerService.consumptionRate = -0.50

# Fixed price/kwh for default production tariff
du.defaultBrokerService.productionRate = 0.02

# Quantity to buy in day-ahead market before seeing actual customer data
du.defaultBrokerService.initialBidKWh = 1000.0

# Initial limit price/mwh for bids in day-ahead market
du.defaultBrokerService.buyLimitPriceMax = -5.0 

# Final limit price/mwh for bids in day-ahead market
du.defaultBrokerService.buyLimitPriceMin = -100.0

# Initial limit price/mwh for asks in day-ahead market
du.defaultBrokerService.sellLimitPriceMax = 30.0

# Final limit price/mwh for asks in day-ahead market
du.defaultBrokerService.sellLimitPriceMin = 0.1

# --------------- Household Customer -------------------
# Name of configuration file of the household customer. Used as input
# for sim mode.
householdcustomer.householdCustomerService.configFile1 = VillageType1.properties
householdcustomer.householdCustomerService.configFile2 = VillageType2.properties
householdcustomer.householdCustomerService.configFile3 = VillageType3.properties
householdcustomer.householdCustomerService.configFile4 = VillageType4.properties
householdcustomer.householdCustomerService.daysOfCompetition = 70

# --------------- Factored Customer ------------------
# Name of configuration file (resource) for setting up factored customers.
factoredcustomer.factoredCustomerService.configResource = FactoredCustomers.xml

# -------------- JMS -------------------
server.jmsManagementService.jmsBrokerUrl = tcp://localhost:61616
